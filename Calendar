def is_leap_year(year):
return (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0)
def get_day_of_week(days):
days_of_week = ["Thursday", "Friday", "Saturday", "Sunday", "Monday", "Tuesday", "Wednesday"]
return days_of_week[days % 7]
def get_date_from_days(days):
months = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"]
days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
year = 1970
while True:
days_in_current_year = 366 if is_leap_year(year) else 365
if days < days_in_current_year:
break
days -= days_in_current_year
year += 1
is_leap = is_leap_year(year)
if is_leap:
days_in_month[1] = 29
else:
days_in_month[1] = 28
month = 0
while days >= days_in_month[month]:
days -= days_in_month[month]
month += 1
day = days + 
return f"{day:02d}-{months[month]}-{year}"
def solve():
T = int(input().strip())
results = []
for _ in range(T):
seconds = int(input().strip())
days = seconds // 86400
date_str = get_date_from_days(days)
day_of_week = get_day_of_week(days)
results.append(f"{date_str} {day_of_week}")
print("\n".join(results))
solve()
